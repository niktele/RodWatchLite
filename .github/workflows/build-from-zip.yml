name: Build from ZIP (LITE)

on:
  workflow_dispatch:
    inputs:
      zip_path:
        description: 'Relativna putanja do ZIP fajla'
        required: false
        default: 'RoadWatch_MapLibre_Lite.zip'
  push:
    paths:
      - 'RoadWatch_MapLibre_Lite.zip'
      - '.github/workflows/build-from-zip.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Proveri ZIP
        id: zip
        shell: bash
        run: |
          set -euo pipefail
          ZIP="${{ github.event.inputs.zip_path || 'RoadWatch_MapLibre_Lite.zip' }}"
          [[ -f "$ZIP" ]] || { echo "ZIP ne postoji: $ZIP" >&2; exit 1; }
          echo "zip=$ZIP" >> "$GITHUB_OUTPUT"

      - name: Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Android SDK
        uses: android-actions/setup-android@v3
        with:
          accept-android-sdk-licenses: true

      - name: Raspakuj projekat
        shell: bash
        run: unzip -o -q "${{ steps.zip.outputs.zip }}" -d "$GITHUB_WORKSPACE/extracted"

      - name: Nađi root (settings.gradle)
        id: proj
        shell: bash
        run: |
          set -euo pipefail
          ROOT_FILE=$(grep -RIl -m1 --include=settings.gradle --include=settings.gradle.kts ./"extracted" || true)
          [[ -n "${ROOT_FILE:-}" ]] || { echo "Nije nađen settings.gradle u ZIP-u." >&2; exit 1; }
          ROOT_DIR=$(dirname "$ROOT_FILE")
          echo "dir=$ROOT_DIR" >> "$GITHUB_OUTPUT"
          echo "Root: $ROOT_DIR"

      - name: Detekcija compileSdk / buildTools
        id: android
        shell: bash
        working-directory: ${{ steps.proj.outputs.dir }}
        run: |
          set -euo pipefail
          CSK=$(grep -Rho --include=*.gradle* "compileSdk\s*=\s*[0-9]+" . | sed -E 's/.*=\s*([0-9]+)/\1/' | head -n1 || true)
          [[ -n "$CSK" ]] || CSK=$(grep -Rho --include=*.gradle* "compileSdkVersion\s+[0-9]+" . | sed -E 's/.*\s([0-9]+)/\1/' | head -n1 || true)
          [[ -n "$CSK" ]] || CSK=34
          BTV=$(grep -Rho --include=*.gradle* "buildToolsVersion\s+['\"][0-9.]+['\"]" . | sed -E "s/.*['\"]([0-9.]+)['\"].*/\1/" | head -n1 || true)
          [[ -n "$BTV" ]] || BTV=34.0.0
          echo "compileSdk=$CSK" >> "$GITHUB_OUTPUT"
          echo "buildTools=$BTV" >> "$GITHUB_OUTPUT"
          echo "compileSdk=$CSK, buildTools=$BTV"

      - name: Install Android pakete
        shell: bash
        run: |
          set -euo pipefail
          yes | sdkmanager --licenses >/dev/null || true
          sdkmanager --install "platform-tools" "platforms;android-${{ steps.android.outputs.compileSdk }}" "build-tools;${{ steps.android.outputs.buildTools }}"

      - name: Gradle wrapper (ako fali)
        shell: bash
        working-directory: ${{ steps.proj.outputs.dir }}
        run: |
          set -euo pipefail
          if [[ ! -x ./gradlew ]]; then
            echo "gradlew nije u ZIP-u -> preuzimam Gradle 8.7 i generišem wrapper"
            cd "$RUNNER_TEMP"
            curl -sL https://services.gradle.org/distributions/gradle-8.7-bin.zip -o gradle.zip
            unzip -q gradle.zip
            export PATH="$RUNNER_TEMP/gradle-8.7/bin:$PATH"
            cd "${{ steps.proj.outputs.dir }}"
            gradle wrapper --gradle-version 8.7
            chmod +x gradlew
          else
            chmod +x gradlew
          fi
          ./gradlew --version

      - name: Build Debug
        shell: bash
        working-directory: ${{ steps.proj.outputs.dir }}
        run: ./gradlew assembleDebug --no-daemon

      - name: (Opcionalno) Build Release
        shell: bash
        working-directory: ${{ steps.proj.outputs.dir }}
        run: ./gradlew assembleRelease --no-daemon || true

      - name: Sakupi APK/AAB
        id: collect
        shell: bash
        working-directory: ${{ steps.proj.outputs.dir }}
        run: |
          set -euo pipefail
          mkdir -p "$GITHUB_WORKSPACE/_artifacts"
          shopt -s globstar nullglob
          found=0
          for f in **/build/outputs/apk/**/*.apk **/build/outputs/bundle/**/*.aab; do
            cp "$f" "$GITHUB_WORKSPACE/_artifacts/" && echo "Collected: $f" && found=1
          done
          [[ $found -eq 1 ]] || { echo "Nisu nađeni APK/AAB fajlovi." >&2; exit 1; }

      - name: Upload artefakata
        uses: actions/upload-artifact@v4
        with:
          name: app-builds
          path: _artifacts/*
          if-no-files-found: error
