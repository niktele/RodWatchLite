name: Build from ZIP (LITE)

on:
  workflow_dispatch:
    inputs:
      zip_path:
        description: 'Path do ZIP fajla sa Android projektom'
        required: false
        default: 'RoadWatch_MapLibre_Lite.zip'
  push:
    paths:
      - 'RoadWatch_MapLibre_Lite.zip'
      - '.github/workflows/build-from-zip.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Proveri da ZIP postoji
        id: zip
        shell: bash
        run: |
          set -euo pipefail
          ZIP="${{ github.event.inputs.zip_path || 'RoadWatch_MapLibre_Lite.zip' }}"
          if [[ ! -f "$ZIP" ]]; then
            echo "ZIP nije pronađen: $ZIP" >&2
            exit 1
          fi
          echo "zip=$ZIP" >> "$GITHUB_OUTPUT"

      - name: Setup Java (Temurin 17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          accept-android-sdk-licenses: true

      - name: Unzip projekta
        shell: bash
        run: unzip -o -q "${{ steps.zip.outputs.zip }}" -d "$GITHUB_WORKSPACE/extracted"

      - name: Pronađi Gradle root
        id: proj
        shell: bash
        run: |
          set -euo pipefail
          ROOT_FILE="$(grep -Rl --include=settings.gradle --include=settings.gradle.kts -m1 "$GITHUB_WORKSPACE/extracted" || true)"
          if [[ -z "${ROOT_FILE:-}" ]]; then
            echo "Nije pronađen settings.gradle u ZIP-u." >&2
            exit 1
          fi
          ROOT_DIR="$(dirname "$ROOT_FILE")"
          ROOT_DIR="$(realpath "$ROOT_DIR")"
          echo "dir=$ROOT_DIR" >> "$GITHUB_OUTPUT"
          echo "Pronađen projekat: $ROOT_DIR"

      - name: Verifikuj Gradle projekat
        shell: bash
        working-directory: ${{ steps.proj.outputs.dir }}
        run: |
          set -euo pipefail
          if [[ ! -f settings.gradle && ! -f settings.gradle.kts ]]; then
            echo "Nema settings.gradle u izabranom folderu → nije validan Gradle projekat." >&2
            exit 1
          fi
          if [[ ! -f gradlew ]]; then
            echo "Gradle wrapper NIJE u ZIP-u. Dodaj gradlew, gradlew.bat i gradle/wrapper/* u ZIP (iz root foldera projekta)." >&2
            exit 1
          fi
          chmod +x gradlew
          ./gradlew --version

      - name: Detekcija Android podešavanja
        id: android
        shell: bash
        working-directory: ${{ steps.proj.outputs.dir }}
        run: |
          set -euo pipefail
          CSK=$(grep -Rho --include=*.gradle* "compileSdk\s*=\s*[0-9]+" . | sed -E 's/.*=\s*([0-9]+)/\1/' | head -n1 || true)
          if [[ -z "$CSK" ]]; then
            CSK=$(grep -Rho --include=*.gradle* "compileSdkVersion\s+[0-9]+" . | sed -E 's/.*\s([0-9]+)/\1/' | head -n1 || true)
          fi
          [[ -z "$CSK" ]] && CSK=34

          BTV=$(grep -Rho --include=*.gradle* "buildToolsVersion\s+['\"][0-9.]+['\"]" . | sed -E "s/.*['\"]([0-9.]+)['\"].*/\1/" | head -n1 || true)
          [[ -z "$BTV" ]] && BTV=34.0.0

          echo "compileSdk=$CSK" >> "$GITHUB_OUTPUT"
          echo "buildTools=$BTV" >> "$GITHUB_OUTPUT"
          echo "compileSdk=$CSK, buildTools=$BTV"

      - name: Install Android pakete
        shell: bash
        run: |
          set -euo pipefail
          sdkmanager --install "platform-tools" || true
          sdkmanager --install "platforms;android-${{ steps.android.outputs.compileSdk }}" || true
          sdkmanager --install "build-tools;${{ steps.android.outputs.buildTools }}" || true
          yes | sdkmanager --licenses >/dev/null || true
          sdkmanager --list | head -n 50 || true

      - name: Setup Gradle (keš)
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false

      - name: Build Debug
        shell: bash
        working-directory: ${{ steps.proj.outputs.dir }}
        run: |
          set -euo pipefail
          ./gradlew assembleDebug --no-daemon

      - name: Build Release (unsigned)
        shell: bash
        working-directory: ${{ steps.proj.outputs.dir }}
        run: |
          set -euo pipefail
          ./gradlew assembleRelease --no-daemon || true

      - name: Sakupi artefakte (APK/AAB)
        id: collect
        shell: bash
        working-directory: ${{ steps.proj.outputs.dir }}
        run: |
          set -euo pipefail
          mkdir -p "$GITHUB_WORKSPACE/_artifacts"
          shopt -s globstar nullglob
          found=0
          for f in **/build/outputs/apk/**/*.apk **/build/outputs/bundle/**/*.aab; do
            cp "$f" "$GITHUB_WORKSPACE/_artifacts/" && echo "Collected: $f" && found=1
          done
          if [[ "$found" -eq 0 ]]; then
            echo "Nisu pronađeni APK/AAB fajlovi." >&2
            exit 1
          fi

      - name: Upload artefakata
        uses: actions/upload-artifact@v4
        with:
          name: app-builds
          path: _artifacts/*
          if-no-files-found: error
